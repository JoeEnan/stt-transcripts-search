# Stage 1: Build the backend with dev dependencies for testing
FROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS builder
ENV UV_COMPILE_BYTECODE=1
ENV UV_LINK_MODE=copy
ENV UV_PYTHON_DOWNLOADS=0
WORKDIR /app

# Install dependencies including dev dependencies (pytest, etc.)
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project --group=dev

# Add project files and ensure all dependencies are installed
ADD . /app
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --group=dev

# Stage 2: Create a run-time image that can execute tests with pytest
FROM python:3.12-slim-bookworm
RUN apt-get update && apt-get install -y ffmpeg && \
    apt-get clean && rm -rf /var/lib/apt/lists/*
COPY --from=builder --chown=app:app /app /app

# Make sure the virtualenv's bin is available in PATH
ENV PATH="/app/.venv/bin:$PATH"
ENV TESTING=1
WORKDIR /app

# Default command to run tests:
CMD ["pytest"]
